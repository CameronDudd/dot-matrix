/*
 *   Copyright (c) 2024 Cameron Dudd
 *   All rights reserved.
 */

#ifndef FONT_H
#define FONT_H

#include <stdint.h>

/*
 * My custom font drawn in procreate on 3x5 grid tiles
 * Therefore need 15 bits to represent the character leaving a flag bit (HSB) spare
 * If flag is set and rest of data is 0 it means it's an unsupported character
 * If flag is set and rest of data is non zero it means that it's a continuous character
 */

uint16_t charSet[] = {
    0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000,
    0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000,
    0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000,
    0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000,
    0b1000000000000000, 0b1000000000000000, 0b1000000000000000, 0b1000000000000000,
    0b0000000000000000,  // SPACE
    0b0010010010000010,  // !
    0b0101101000000000,  // "
    0b1010111010111010,  // #
    0b1000000000000000,  // $
    0b0100001010100001,  // %
    0b1000000000000000,  // &
    0b0010010000000000,  // '
    0b0010100100100010,  // (
    0b0010001001001010,  // )
    0b0001010101010000,  // *
    0b0000101110100000,  // +
    0b1000000000000000,  // ,
    0b0000001110000000,  // -
    0b0000000000000100,  // .
    0b0000001010100000,  // /
    0b0111101101101111,  // 0
    0b0010110010010111,  // 1
    0b0111001111100111,  // 2
    0b0111001111001111,  // 3
    0b0101101111001001,  // 4
    0b0111100111001111,  // 5
    0b0111100111101111,  // 6
    0b0111001001001001,  // 7
    0b0111101111101111,  // 8
    0b0111101111001001,  // 9
    0b0000010000010000,  // :
    0b0000010000010100,  // ;
    0b0001010100010001,  // <
    0b0000111000111000,  // =
    0b0100010001010100,  // >
    0b0111001011000010,  // ?
    0b1000000000000000,  // @
    0b0010101101111101,  // A
    0b0110101110101110,  // B
    0b0011100100100011,  // C
    0b0110101101101110,  // D
    0b0011100111100011,  // E
    0b0011100111100100,  // F
    0b0011100100101011,  // G
    0b0101101111101101,  // H
    0b0110001001101110,  // J
    0b0101101110101101,  // K
    0b0100100100100111,  // L
    0b1100110101100100,  // M
    0b0110101101101101,  // N
    0b0010101101101010,  // O
    0b0110101110100100,  // P
    0b0011101011001001,  // Q
    0b0110101101110101,  // R
    0b0011100111001110,  // S
    0b0111010010010010,  // T
    0b0101101101101111,  // U
    0b0101101101101010,  // V
    0b1100100101110100,  // W
    0b1000000000000000,  // TODO(cameron): X
    0b1000000000000000,  // TODO(cameron): Y
    0b1000000000000000,  // TODO(cameron): Z
    0b0110100100100110,  // [
    0b0000100010001000,  // '\\'
    0b0011001001001011,  // ]
    0b0000010101000000,  // ^
    0b0000000000000111,  // _
    0b1000000000000000,  // `
    0b1000000000000000,  // a
    0b1000000000000000,  // b
    0b1000000000000000,  // c
    0b1000000000000000,  // d
    0b1000000000000000,  // e
    0b1000000000000000,  // f
    0b1000000000000000,  // g
    0b1000000000000000,  // h
    0b1000000000000000,  // i
    0b1000000000000000,  // j
    0b1000000000000000,  // k
    0b1000000000000000,  // l
    0b1000000000000000,  // m
    0b1000000000000000,  // n
    0b1000000000000000,  // o
    0b1000000000000000,  // p
    0b1000000000000000,  // q
    0b1000000000000000,  // r
    0b1000000000000000,  // s
    0b1000000000000000,  // t
    0b1000000000000000,  // u
    0b1000000000000000,  // v
    0b1000000000000000,  // w
    0b1000000000000000,  // x
    0b1000000000000000,  // y
    0b1000000000000000,  // z
    0b0011010110010011,  // {
    0b0010010010010010,  // |
    0b0110010011010110,  // }
    0b1000000000000000,  // ~
};

#endif  // FONT_H
